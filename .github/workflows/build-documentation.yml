# https://github.com/ActionsHackathon21/build-documentations/blob/main/.github/workflows/build-documentations.yml
name: Build documentations

env:
  PIP_CACHE_DIR: .pip # Configure the PIP cache directory
  DOCUMENTATIONS_BRANCH: gh-pages # Configure the documentations branch, which you will use for Github pages

on:
  push:
    paths: [ mkdocs/docs/**.md ] # Only trigger workflow when there are changes on docs
    branches: [ main ] # Configure the branchs which you want to run this workflow

jobs:
  build-push:
    name: "Build & Push docs"
    runs-on: ubuntu-latest

    steps:

    # Checkout source code
    - name: Checkout
      uses: actions/checkout@v2

    # Cache dependencies for faster build time in future
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: |
          ./.pip
        key: ${{ runner.os }}-modules-${{ hashFiles('./mkdocs-pip.txt') }}

    # Install dependencies for build process
    - name: Install build dependencies
      run: |
        pip install -IU -r mkdocs-pip.txt

    # Build docs
    - name: Build documentations
      run: |
        mkdocs build

    # Synchronize & push BUILD directory to docs branch
    - name: Configure Git informations
      run: |
        git config --global user.name $GITHUB_ACTOR
        git config --global user.email $GITHUB_ACTOR@users.noreply.github.com
        

    - name: Synchronize & push into docs branch
      run: |
        DEPLOY_BRANCH=$DOCUMENTATIONS_BRANCH
        GIT_COMMIT=$(git rev-parse --short HEAD)

        mkdir RELEASE
        mv .git RELEASE/.git
        cd RELEASE
        echo "Checking out $DEPLOY_BRANCH"
        git checkout -b $DEPLOY_BRANCH
        git status
        git stash && git stash drop
        (git pull --depth 1 origin $DEPLOY_BRANCH --rebase -X theirs --allow-unrelated-histories) || (echo "Docs branch synced")
        mv ./.git ../.git
        cd ..

        # Push build into the docs branch
        mv docs-build BUILD
        echo "Pushing build $GIT_COMMIT to $DEPLOY_BRANCH"
        mv .git BUILD/.git
        cd BUILD
        git status
        git add -A
        git commit -m "Automated documentation build $GIT_COMMIT"
        git push origin $DEPLOY_BRANCH
        cd ..
